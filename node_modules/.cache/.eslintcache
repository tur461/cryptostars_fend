[{"/home/user/Desktop/ashucryptyostart/crypto-star/src/index.js":"1","/home/user/Desktop/ashucryptyostart/crypto-star/src/App.js":"2","/home/user/Desktop/ashucryptyostart/crypto-star/src/reportWebVitals.js":"3","/home/user/Desktop/ashucryptyostart/crypto-star/src/Application.js":"4","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/index.js":"5","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/store.js":"6","/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/index.js":"7","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/LoaderComponent/LoaderComponent.js":"8","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Accordian/FaqAccordianItem.js":"9","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Button/ButtonPrimary.js":"10","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Card/PlayerCard.js":"11","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Layout/Layout.js":"12","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/CustomModal.js":"13","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Input/CustomInputgroup.js":"14","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/ConnectWalletModal.js":"15","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/SelectTokenModal.js":"16","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/SettingModal.js":"17","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/RecentTransactions.js":"18","/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/PublicRoutes/PublicRoutes.js":"19","/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/PrivateRoutes/PrivateRoutes.js":"20","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/swap/index.js":"21","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/wallet/index.js":"22","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/liquidity/index.js":"23","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Toast/Toast.js":"24","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/common.js":"25","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/common.js":"26","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/l_t.js":"27","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/logger.js":"28","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/wallet/index.js":"29","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/utils.js":"30","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/toast.js":"31","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/index.js":"32","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/Public/Swap/Swap.js":"33","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/Public/Home/Home.js":"34","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/factory.js":"35","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/faucet.js":"36","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/router.js":"37","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/token.js":"38","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/utils.js":"39","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Loader/index.js":"40","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/contracts.js":"41","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/abi.js":"42"},{"size":592,"mtime":1659086007000,"results":"43","hashOfConfig":"44"},{"size":389,"mtime":1659086007000,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1659086007000,"results":"46","hashOfConfig":"44"},{"size":619,"mtime":1659088371000,"results":"47","hashOfConfig":"44"},{"size":800,"mtime":1659088371000,"results":"48","hashOfConfig":"44"},{"size":739,"mtime":1659088371000,"results":"49","hashOfConfig":"44"},{"size":156,"mtime":1659086007000,"results":"50","hashOfConfig":"44"},{"size":286,"mtime":1659086007000,"results":"51","hashOfConfig":"44"},{"size":465,"mtime":1659086007000,"results":"52","hashOfConfig":"44"},{"size":263,"mtime":1659086007000,"results":"53","hashOfConfig":"44"},{"size":3336,"mtime":1659088371000,"results":"54","hashOfConfig":"44"},{"size":280,"mtime":1659088371000,"results":"55","hashOfConfig":"44"},{"size":549,"mtime":1659086007000,"results":"56","hashOfConfig":"44"},{"size":1382,"mtime":1659509875058,"results":"57","hashOfConfig":"44"},{"size":1923,"mtime":1659330068000,"results":"58","hashOfConfig":"44"},{"size":2199,"mtime":1659510721025,"results":"59","hashOfConfig":"44"},{"size":2167,"mtime":1659088371000,"results":"60","hashOfConfig":"44"},{"size":440,"mtime":1659088371000,"results":"61","hashOfConfig":"44"},{"size":328,"mtime":1659086007000,"results":"62","hashOfConfig":"44"},{"size":339,"mtime":1659086007000,"results":"63","hashOfConfig":"44"},{"size":2685,"mtime":1659512093310,"results":"64","hashOfConfig":"44"},{"size":638,"mtime":1659088371000,"results":"65","hashOfConfig":"44"},{"size":1002,"mtime":1659088371000,"results":"66","hashOfConfig":"44"},{"size":511,"mtime":1659088371000,"results":"67","hashOfConfig":"44"},{"size":653,"mtime":1659088371000,"results":"68","hashOfConfig":"44"},{"size":3550,"mtime":1659510297550,"results":"69","hashOfConfig":"44"},{"size":250,"mtime":1659088371000,"results":"70","hashOfConfig":"44"},{"size":323,"mtime":1659088371000,"results":"71","hashOfConfig":"44"},{"size":1739,"mtime":1659088371000,"results":"72","hashOfConfig":"44"},{"size":1337,"mtime":1659420242264,"results":"73","hashOfConfig":"44"},{"size":230,"mtime":1659088371000,"results":"74","hashOfConfig":"44"},{"size":102,"mtime":1659086007000,"results":"75","hashOfConfig":"44"},{"size":19809,"mtime":1659599944527,"results":"76","hashOfConfig":"44"},{"size":8866,"mtime":1659086007000,"results":"77","hashOfConfig":"44"},{"size":816,"mtime":1659088371000,"results":"78","hashOfConfig":"44"},{"size":942,"mtime":1659088371000,"results":"79","hashOfConfig":"44"},{"size":2055,"mtime":1659599695137,"results":"80","hashOfConfig":"44"},{"size":1454,"mtime":1659088371000,"results":"81","hashOfConfig":"44"},{"size":820,"mtime":1659423233194,"results":"82","hashOfConfig":"44"},{"size":1224,"mtime":1659088371000,"results":"83","hashOfConfig":"44"},{"size":463,"mtime":1659088371000,"results":"84","hashOfConfig":"44"},{"size":584,"mtime":1659088371000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"79k0d2",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/user/Desktop/ashucryptyostart/crypto-star/src/index.js",[],["185","186"],"/home/user/Desktop/ashucryptyostart/crypto-star/src/App.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/reportWebVitals.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Application.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/index.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/store.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/index.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/LoaderComponent/LoaderComponent.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Accordian/FaqAccordianItem.js",["187"],"import React from \"react\";\nimport { Container, Accordion } from \"react-bootstrap\";\n\nconst FaqAccordianItem = ({ no, title, text, eventKey }) => {\n  return (\n    <Accordion.Item eventKey={eventKey}>\n      <Accordion.Header>\n        <span className=\"noList\">\n          {no}\n          <span>-</span>\n        </span>\n        {title}\n      </Accordion.Header>\n      <Accordion.Body>{text}</Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\nexport default FaqAccordianItem;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Button/ButtonPrimary.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Card/PlayerCard.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Layout/Layout.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/CustomModal.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Input/CustomInputgroup.js",["188"],"import React, { useState } from \"react\";\nimport { InputGroup, FormControl, Form } from \"react-bootstrap\";\nimport SelectTokenModal from \"../Modal/SelectTokenModal\";\nimport \"./inputStyle.scss\";\n\nconst CustomInputgroup = ({ className, icon, title, states }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n    states.tList.resetTList_chg();\n  };\n  const handleShow = () => setShow(true);\n  return (\n    <InputGroup className={`customInp_style ${className}`}>\n      <InputGroup.Text>\n        <div className=\"coinSelect_wrap\">\n          <img src={icon} alt=\"coin_icon\" />\n          <div className=\"coinSelect\">\n            <span>{title} </span>\n            <span className=\"selectOption\" onClick={handleShow}>\n              {states.tList.val}\n            </span>\n          </div>\n          <SelectTokenModal show={show} hideCbk={handleClose} state={states.tList} />\n        </div>\n      </InputGroup.Text>\n      <FormControl \n        type=\"text\" \n        minLength=\"1\" \n        maxLength=\"79\" \n        placeholder=\"0.0\" \n        spellCheck=\"false\" \n        autoCorrect=\"off\" \n        autoComplete=\"off\" \n        inputMode=\"decimal\" \n        value={states.token.val} \n        onChange={states.token.cbk} \n        pattern=\"^[0-9]*[.,]?[0-9]*$\" \n      />\n                        \n    </InputGroup>\n  );\n};\n\nexport default CustomInputgroup;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/ConnectWalletModal.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/SelectTokenModal.js",["189"],"import React from \"react\";\nimport CustomModal from \"./CustomModal\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useSelector } from \"react-redux\";\n\n\n\nconst SelectTokenModal = ({ size, show, hideCbk, state }) => {\n  const swap = useSelector(s => s.swap);\n  return (\n    <CustomModal\n      size={size}\n      show={show}\n      onHide={hideCbk}\n      classname=\"selectCurrency_modal\"\n      title=\"Select a Token\"\n    >\n      <div className=\"gradiantWrap\">\n        <input\n          name=\"tokenSearch\"\n          className=\"searchInput_Style\"\n          onPaste={e => state.scbk(e.target.value)}\n          onChange={e => state.scbk(e.target.value)}\n          placeholder=\"Search name or paste address\"\n        />\n      </div>\n      <div className=\"tokenName\">\n        <h4>Token Name</h4>\n        <hr />\n      </div>\n\n      <PerfectScrollbar>\n        <div className=\"coinListBlockStyle\">\n          {swap.tokenList_chg.map((data, i) => (\n            <CoinItem \n              key={i} \n              data={data} \n              cbk={state.cbk} \n              title={data.sym} \n              hideCbk={hideCbk} \n              iconImage={data.icon} \n              importCbk={state.importCbk} \n            />\n          ))}\n        </div>\n      </PerfectScrollbar>\n    </CustomModal>\n  );\n};\nconst CoinItem = ({ className, iconImage, title, hideCbk, data, cbk, importCbk }) => {\n  return (\n    <div \n      onClick={\n        data.disabled ? \n        e => e.preventDefault() : \n        _ => cbk(title, data.addr, hideCbk(!0))\n      }\n      className={`coinItem ${data.disabled ? 'keep-disabled' : ''}`} \n    >\n      <div className={`coinItem_style ${className}`}>\n        \n        <p className=\"titleStyle\"> \n          <img src={iconImage} /> \n          {title} \n        </p>\n        <p className=\"tokenDescription\">\n          <span className=\"tokenName\">{data.name}</span>\n          <span className=\"tokenBalance\">{data.bal}</span>\n        </p>\n      </div>\n      <button \n        onClick={importCbk}\n        style={{display: data.imported ? 'none' : 'inline-block' }}\n      >Import</button>\n    </div>\n  );\n};\nexport default SelectTokenModal;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/SettingModal.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/RecentTransactions.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/PublicRoutes/PublicRoutes.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Routes/PrivateRoutes/PrivateRoutes.js",["190"],"import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nconst PrivateRoutes = () => {\n  return (\n    <Routes>\n      {/* <Route path=\"/\" element={<Home />} />\n      <Route path=\"about\" element={<About />} />\n      <Route path=\"contact\" element={<Contact />} /> */}\n    </Routes>\n  );\n};\n\nexport default PrivateRoutes;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/swap/index.js",["191","192"],"import { createSlice } from '@reduxjs/toolkit';\nimport { EVENT, MISC, TOKEN_LIST_STATIC } from '../../../services/constants/common';\nimport { evDispatch } from '../../../services/utils';\n\nexport const swapSlice = createSlice({\n    name: 'swap',\n    initialState: {\n        token1: '',\n        token1_sym: 'Select a token',\n        token1_addr: '',\n        token2: '',\n        token2_sym: 'Select a token',\n        token2_addr: '',\n        token1_approved: !0,\n        slippage: MISC.DEF_SLIPPAGE,\n        deadLine: MISC.SWAP_DEAD_LINE,\n        isExactIn: !0,\n        xchangeEq: '',\n        validSwap: !1,\n        tokenList: TOKEN_LIST_STATIC,\n        tokenList_chg: TOKEN_LIST_STATIC, \n    },\n\n    reducers: {\n        setTokenValue: (state, action) => {\n            let n = action.payload.n;\n            if(n === 0) {\n                state.token1 = action.payload.v;\n                state.token2 = action.payload.v;\n            } else state[`token${n}`] = action.payload.v;\n        },\n        setToken1Approved: (s, a) => {\n            s.token1_approved = a.payload;\n        },\n        setExactIn: (state, action) => {\n            state.isExactIn = action.payload;\n        },\n        setValidSwap: (state, action) => {\n            state.validSwap = action.payload;\n        },\n        setTokenInfo: (state, action) => {\n            state[`token${action.payload.n}_sym`] = action.payload.sym;\n            state[`token${action.payload.n}_addr`] = action.payload.addr;\n            const list = state.tokenList_chg.filter(item => item.addr !== action.payload.addr);\n            const sel = state.tokenList_chg.filter(item => item.addr === action.payload.addr)[0];\n            sel.disabled = !0;\n            state.tokenList_chg = [...list, sel];\n            // pending..\n\n        },\n        addToTokenList: (state, action) => {\n            state.tokenList.push({\n                ...action.payload\n            })\n            state.tokenList_chg = [...state.tokenList];\n        },\n        changeTokenList: (state, action) => {\n            state.tokenList_chg = [...action.payload];\n        },\n        setXchangeEq: (state, action) => {\n            state.xchangeEq = action.payload;\n        },\n        setDeadLine: (state, action) => {\n            state.deadLine = action.payload;\n        },\n        setSlippage: (state, action) => {\n            state.slippage = action.payload;\n        },\n    }\n});\n\nconst {reducer, actions } = swapSlice;\n\nexport const { \n    setPair,\n    setExactIn,\n    setDeadLine,\n    setSlippage,\n    setValidSwap,\n    setXchangeEq,\n    setTokenInfo,\n    setTokenValue,\n    addToTokenList,\n    changeTokenList,\n    setToken1Approved,\n} = actions;\n\nexport default reducer;","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/wallet/index.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/liquidity/index.js",["193","194","195"],"import { createSlice } from '@reduxjs/toolkit';\nimport { EVENT } from '../../../services/constants/common';\nimport { evDispatch, isValidAddr } from '../../../services/utils';\n\n\nexport const liquiditySlice = createSlice({\n    name: 'liquidity',\n    initialState: {\n        token1: '',\n        token1_addr: '',\n        token2: '',\n        token2_addr: '',\n        amount1AppNeeded: !1,\n        amount2AppNeeded: !1,\n    },\n\n    reducers: {\n        setTokenValue_l: (state, action) => {\n            state[`token${action.payload.n}`] = action.payload.v;\n        },\n        setToken_addr_l: (state, action) => {\n            state[`token{action.payload.n}_addr`] = action.payload.addr;\n        },\n        setNeedOfAmountApp: (state, action) => {\n            state[`amount${action.payload.n}AppNeeded`] = action.payload.v;\n        },\n    }\n});\n\nconst {reducer, actions } = liquiditySlice;\n\nexport const { \n    setTokenValue_l,\n    setToken_addr_l,\n    setNeedOfAmountApp,\n} = actions;\n\nexport default reducer;","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Toast/Toast.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/common.js",["196"],"import log from \"../logging/logger\";\nimport l_t from \"../logging/l_t\";\nimport Wallet from \"../wallet\"\n\nconst CommonF = {\n    from: '',\n    init: function(p) {\n        this.from = p.from;\n    },\n    sendTx: async function(txObj) {\n        Wallet.init();\n        try {\n            let estimate = await Wallet.provider.estimateGas(txObj);\n            txObj['gas'] = estimate.toHexString();\n        } catch(e) {\n            return new Promise((_, j) => j(l_t.e(e.reason)));\n        }\n        let txHash = await Wallet.provider.send('eth_sendTransaction', [txObj]);\n        return Wallet.provider.waitForTransaction(txHash);\n    },\n}\n\nexport default CommonF;","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/common.js",["197"],"\nimport GEN_ICON from \"../../Assets/Images/token_icons/Gen.svg\";\nimport BUSD from \"../../Assets/Images/token_icons/BUSD-Token.svg\";\nimport WBNB from \"../../Assets/Images/token_icons/WBNB-Token-Icon.svg\";\n\nexport const ADDRESS = {\n    ZERO: `0x${'0'.repeat(40)}`,\n    ADMIN: '0x84fF670281055e51FE317c0A153AAc2D26619798',\n    ADMINS: [ \n        '0x84fF670281055e51FE317c0A153AAc2D26619798',\n        '0x18653A11aB0003922649dDa4A25b258831CDAe86',\n    ],\n    CST_TOKEN: '0xD6Fc68d2e678890cE9165781A4934c21902b34cD',\n    BUSD_TOKEN: '0x83D685Ed8D7E2591c998bF2c87e01c5795Df55fd',\n    WETH_TOKEN: '0x417F761CFD4031cE8897724690798778A5470E86',\n    ROUTER_CONTRACT: '0x1f6FC677FD7ef2B23bbD5D0CC5280B1268323122',\n    FACTORY_CONTRACT: '0x0EfAD05151EAd32ECc89BB049124c9efe18e55A5',\n    CST_FAUCET_CONTRACT: '0xA189e169181b64fE5Cf152b88A455e93B5Aa5d87',\n}\n\nexport const MISC = {\n    MAX_256: '115792089237316195423570985008687907853269984665640564039457584007913129639935',\n    BUSD_DEC: 18,\n    DEF_SLIPPAGE: 7.5,\n    DIV_DEC_PLACES: 10,\n    CHAIN_ID: {\n        BSC_TEST: 97,\n        BSC_MAIN: 51,\n        CRO_TEST: 338,\n    },\n    PVT_KEY: process.env.REACT_APP_PRIVATE_KEY,\n    SWAP_DEAD_LINE: 20.0, // 20 min from now\n    CONNECT_TTL: 'Connect Wallet',\n    APPROVAL_AMOUNT: '', \n}\n\nexport const VALID_CHAIN_ID = MISC.CHAIN_ID.CRO_TEST;\n\n// export const NUM = {\n//     BIG_0: BigInt(0),\n//     BIG_1: BigInt(1),\n//     BIG_100: BigInt(100),\n//     BIG_256: BigInt('9'.repeat(256)),\n// }\n\n// all local-storage keys are kept here!\nexport const LS_KEYS = {\n    JWT: 'jwtToken',\n}\n\nexport const ERR = {\n    INV_CHAIN: 'Invalid Chain!',\n    NO_METAMASK: 'metamask not installed!',\n    NOT_ADMIN: 'primary wallet account is not an admin!',\n}\n\nexport const EVENT = {\n    ACC_CHANGE: 'account_change_event',\n    CHAIN_CHANGE: 'chain_change_event',\n    CHECK_ALLOWANCE: 'allowance_check_event',\n    SWAP_TOKEN_VAL_CHANGE: 'swap_token_value_changed',\n}\n\nexport const TOKEN_LIST_STATIC = [\n    {\n        imported: !0,\n        icon: GEN_ICON,\n        sym: \"tk\",\n        name: 'token1',\n        bal: '0',\n        dec: 18,\n        disabled: !1,\n        addr: '0xAeD9eB10741eEe2340A308029D1A905F1F2a4625',\n    \n    },\n    {\n        imported: !0,\n        icon: BUSD,\n        sym: \"ioi\",\n        name: 'IOI',\n        bal: '0',\n        dec: 18,\n        disabled: !1,\n        addr: '0xBA32Ed7CceF304fF9DFF35e23AE4fb91BD194B71',\n    },\n    // {\n    //     imported: !0,\n    //     icon: WBNB,\n    //     sym: \"CSTAR\",\n    //     name: 'crypto-star erc20 token',\n    //     bal: '1934500456',\n    //     dec: 18,\n        // disabled: !1,\n    //     addr: '0x83D685Ed8D7E2591c998bF2c87e01c5795Df55fd',\n    // },\n    // {\n    //     imported: !0,\n    //     icon: BUSD,\n    //     sym: \"BUSD\",\n    //     name: 'busd erc20 token',\n    //     bal: '1234',\n    //     dec: 18,\n        // disabled: !1,\n    //     addr: '0x627FE899085ff5F6e51A8ed50F76243C51674e01',\n    // },\n    // {\n    //     imported: !0,\n    //     icon: BUSD,\n    //     sym: \"CFLU\",\n    //     name: 'coinfluence erc20 token',\n    //     bal: '5780001',\n    //     dec: 18,\n        // disabled: !1,\n    //     addr: '0x018b32b3cfaA0D74953B50309f82e57B4bAEdaE2',\n    // },\n    // {\n    //     imported: !1,     \n    //     icon: WBNB,\n    //     sym: \"STEEP\",\n    //     name: 'steep labs erc20 token',\n    //     bal: '740673',\n    //     dec: 18,\n        // disabled: !1,\n    //     addr: '0xD24cb054d7d725cF74715671e4F4F8009BD9015f',\n    // },\n]\n\nexport const INIT_VAL = {\n    SWAP_BTN: ['welcome', 'Swap']\n\n}\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/l_t.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/logger.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/wallet/index.js",["198"],"import { ethers } from \"ethers\";\nimport { EVENT, MISC, VALID_CHAIN_ID } from \"../constants/common\";\nimport log from \"../logging/logger\";\nimport l_t from \"../logging/l_t\";\nimport { getAddress } from 'ethers/lib/utils';\n\nconst Wallet = {\n    M: window.ethereum,\n    _signer: null,\n    _provider: null,\n    init: async function() {\n        log.s('Wallet init..');\n        if(!!!this._provider) {\n            this._provider = new ethers.providers.Web3Provider(this.M, 'any');\n            this._signer = this.provider.getSigner();\n            this._initEvents();\n            log.s('init done');\n        }\n        return this;\n    },\n    get signer() {\n        log.i('get signer');\n        return this._signer;\n    },\n    get provider() {\n        log.i('get provider');\n        return this._provider;\n    },\n    checkChain: async function() {\n        let nw = await this._provider.getNetwork()\n        if(nw.chainId !== VALID_CHAIN_ID) {\n            l_t.e('please select cronos testnet');\n            return !1;\n        }\n        return !0;\n    },\n    getPriAccount: async function() {\n        let accounts = await this._provider.send('eth_requestAccounts', []);\n        accounts = accounts.map(a => getAddress(a));\n        return accounts[0];\n    },\n    _initEvents: function() {\n        window.ethereum.on('chainChanged', async _ => {\n            l_t.i('chain change event');\n            let isValidChain = await this.checkChain();\n            window.dispatchEvent(new CustomEvent(EVENT.CHAIN_CHANGE, {detail: {isValidChain}}));\n        });\n        window.ethereum.on('accountsChanged', _ => {\n            l_t.i('account change event');\n            window.dispatchEvent(new Event(EVENT.ACC_CHANGE));\n        });\n    }\n}\n\nexport default Wallet;","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/utils.js",["199"],"import { ADDRESS, MISC } from \"./constants/common\";\nimport {BigNumber} from '@ethersproject/bignumber';\n\nfunction spow(s, e) {\n    s = s[0] === '.' ? '0' + s : s;\n    let i = s.indexOf('.');\n    i = i > 0 ? i : s.length;\n    let int = s.slice(0, i);\n    let dec = s.slice(i+1);\n    let l = dec.length;\n    i = {\n        int: int,\n        dec: dec,\n        pow: e - l,\n    };\n\n    return `${i.int}${i.dec}${'0'.repeat(i.pow)}`;\n}\n\nfunction toGib(s, dec) {\n    let d = s.length - dec,\n        i = d<=0 ? 0 : d,\n        l = s.slice(0, i),\n        r = s.slice(i);\n    if(!i) {\n        r = '0'.repeat(d*-1) + r;\n        l = '0';\n    }\n    return `${parseFloat(`${l}.${r}`)}`;\n}\n\n\nfunction bigDiv(N, D) {\n    let x = BigNumber.from(Math.pow(10, MISC.DIV_DEC_PLACES));\n    return `${toGib(N.mul(x).div(D).toBigInt().toString(), MISC.DIV_DEC_PLACES)}`;\n}\n\nfunction isValidAddr(address) {\n    if(\n        address &&\n        address.length && \n        address.length == 42 && \n        address.substring(0,2) === '0x' && \n        address !== ADDRESS.ZERO\n    ) return true;\n    return false;\n}\n\nfunction evDispatch(t, d) {\n    dispatchEvent(new CustomEvent(t, {detail: d}));\n}\n\nfunction toStd(v) {\n    return v.toLocaleString('fullwide', {useGrouping: !1});\n}\n\nexport {\n    spow,\n    toStd,\n    toGib,\n    bigDiv,\n    isValidAddr,\n    evDispatch,\n}","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/logging/toast.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/index.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/Public/Swap/Swap.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import {BigNumber} from '@ethersproject/bignumber';\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport headerImg from \"../../../../Assets/Images/headerImg.png\";\nimport draco from \"../../../../Assets/Images/draco-roadmap.png\";\nimport cstcoin from \"../../../../Assets/Images/cst-coin.png\";\nimport lamescoin from \"../../../../Assets/Images/lames-coin.png\";\nimport swapicon from \"../../../../Assets/Images/swap-icon.png\";\nimport LMES from \"../../../../Assets/Images/LMES.png\";\nimport MSAL from \"../../../../Assets/Images/MSAL.png\";\nimport MBAP from \"../../../../Assets/Images/MBAP.png\";\nimport HAAL from \"../../../../Assets/Images/HAAL.png\";\nimport settings from \"../../../../Assets/Images/Settings-Icon.svg\";\nimport timer from \"../../../../Assets/Images/ionic-ios-timer.svg\";\nimport GenIcon from \"../../../../Assets/Images/token_icons/Gen.svg\";\nimport {\n  CustomInputgroup,\n  Layout,\n  PlayerCard,\n  ButtonPrimary,\n  ConnectWalletModal,\n  RecentTransactions,\n  SettingModal,\n} from \"../../../Common\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport \"./Swap.scss\";\n\nimport { \n  setExactIn,\n  setSlippage,\n  setDeadLine,\n  setValidSwap,\n  setXchangeEq, \n  setTokenInfo,\n  setTokenValue,\n  changeTokenList,\n  addToTokenList,\n  setToken1Approved,\n} from \"../../../features/swap\";\nimport { \n  setTokenValue_l, \n  setToken_addr_l, \n  setNeedOfAmountApp, \n} from \"../../../features/liquidity\";\n\nimport l_t from \"../../../../services/logging/l_t\";\nimport { ADDRESS, INIT_VAL, MISC } from \"../../../../services/constants/common\";\nimport { bigDiv, spow, toGib, isValidAddr, toStd } from \"../../../../services/utils\";\nimport { getDeadline, getThresholdAmountFromTolerance } from \"../../../../services/contracts/utils\";\n\nimport CommonF from \"../../../../services/contracts/common\";\nimport TokenContract from \"../../../../services/contracts/token\";\nimport RouterContract from \"../../../../services/contracts/router\";\nimport FaucetContract from '../../../../services/contracts/faucet';\nimport FactoryContract from '../../../../services/contracts/factory';\nimport Loader from '../../../Loader';\nimport log from '../../../../services/logging/logger';\nimport toast from '../../../../services/logging/toast';\n\nconst PlayerName = [\n  { name: \"Lionel Messi\", symbol: \"TUR\", icon: LMES },\n  { name: \"Mohamed Salah\", symbol: \"STEEP\", icon: MSAL },\n  { name: \"Robert Lewandowski\", symbol: \"CFLU\", icon: LMES },\n  { name: \"Kylian Mbappé\", symbol: \"CSTAR\", icon: MBAP },\n  { name: \"Erling Haaland\", symbol: \"DIY\", icon: HAAL },\n];\n\nconst PlayerList = () => {\n  return PlayerName.map((player, index) => (\n    <li key={index}>\n      <img src={player.icon} alt=\"palyer_icon\" />\n      <span>\n        {player.name} <strong>({player.symbol})</strong>\n      </span>\n    </li>\n  ));\n};\n\nconst Swap = () => {\n  const dispatch = useDispatch();\n\n  // redux states\n  const swap = useSelector(s => s.swap);\n  const wallet = useSelector(s => s.wallet);\n\n  // non-redux states\n  const [show, setShow] = useState(!1);\n  const [pair, setPair] = useState([]);\n  const [isErr, setIsErr] = useState(!1);\n  const [errText, setErrText] = useState('');\n  const [amountIn, setAmountIn] = useState('0');\n  const [isExactIn, setIsExactIn] = useState('0');\n  const [isFetching, setIsFetching] = useState(!1);\n  const [isDisabled, setIsDisabled] = useState(!0);\n  const [recentShow, setRecentShow] = useState(!1);\n  const [settingsShow, setSettingsShow] = useState(!1);\n  const [tokenApproved, setTokenApproved] = useState(!0);\n  const [thresholdAmount, setThresholdAmount] = useState('0');\n  const [btnText, setBtnText] = useState(INIT_VAL.SWAP_BTN[0]);\n  const [xchangeEquivalent, setXchangeEquivalent] = useState('0');\n  const [connectTitle, setConnectTitle] = useState(MISC.CONNECT_TTL);\n  \n  // helpers\n  const handleShow = () => setShow(!0);\n  const handleClose = () => setShow(!1);\n  const recentHndShow = () => setRecentShow(!0);\n  const recentHndClose = () => setRecentShow(!1);\n  const settingHndShow = () => setSettingsShow(!0);\n  const settingHndClose = () => setSettingsShow(!1);\n\n  useEffect(_ => {\n    if(!wallet.isConnected) l_t.e('Wallet not Connected!');\n    else CommonF.init({from:wallet.priAccount});\n  }, [connectTitle]);\n\n  useEffect(_ => {\n    resetStates()\n  }, [swap.slippage])\n\n  useEffect(_=>{\n    log.i('pair:', pair);\n    log.i('is err:', isErr);\n    setIsDisabled(isErr);\n  })\n\n\n  async function approveWithMaxAmount(e) {\n    log.i('approving..')\n    e.preventDefault();\n    TokenContract.init(swap.token1_addr);\n    setIsFetching(!0);\n    await TokenContract.approve(MISC.MAX_256, ADDRESS.ROUTER_CONTRACT);\n    setIsFetching(!1);\n    setTokenApproved(!0);\n  }\n\n  function resetStates() {\n    setTokenApproved(!0);\n    setIsDisabled(!0);\n    setBtnText('Swap');\n    dispatch(setTokenValue({v: '', n: 0}));\n  }\n  // ------------------------------------------------------\n\n  // -------------------- Swap Code -----------------------\n\n  // assumes Center Token is CST token\n  async function checkIfHasPair(p) {\n    let pAddr = await FactoryContract.getPair(p[0], p[1]);\n    if(pAddr !== ADDRESS.ZERO) return p;\n    else\n    if(p[0] === ADDRESS.CST_TOKEN || p[1] === ADDRESS.CST_TOKEN)\n      throw new Error('\"error: token pair doesn\\'t exist!\"');\n    else {\n      pAddr = await FactoryContract.getPair(p[0], ADDRESS.CST_TOKEN);\n      let pAddr2 = await FactoryContract.getPair(p[1], ADDRESS.CST_TOKEN);\n      if(pAddr !== ADDRESS.ZERO && pAddr2 !== ADDRESS.ZERO) return [p[0], ADDRESS.CST_TOKEN, p[1]];\n    }\n    setIsFetching(!1);\n    throw new Error('\"error: pair doesn\\'t exist!\"');\n  }\n\n  async function setSwapPrerequisites(amount, pr, inOrOutAmount, xactIn) {\n    log.i(arguments, swap.slippage);\n    const sellTokenAddr = isExactIn ? swap.token1_addr : swap.token2_addr;\n    const buyTokenAddr = isExactIn ? swap.token2_addr : swap.token1_addr;\n    TokenContract.init(sellTokenAddr);\n    const sellTokenDec = await TokenContract.decimals();\n    TokenContract.init(buyTokenAddr);\n    const buyTokenDec = await TokenContract.decimals();\n    \n    let xactAmount = toStd(amount * 10**(xactIn ? sellTokenDec : buyTokenDec));\n    log.i('inOrOutAmount:', inOrOutAmount.to);\n    let thAmount = getThresholdAmountFromTolerance(inOrOutAmount, swap.slippage, xactIn, xactIn ? buyTokenDec : sellTokenDec)\n    log.i('Final TH amount:', thAmount);\n    log.s(btnText);\n    setPair(pr);\n    setAmountIn(xactAmount);\n    setThresholdAmount(thAmount.toString());\n    return !0;\n  }\n\n  async function performSwap(e) {\n    e.preventDefault();\n    if(isErr) return toast.e('please resolve error first!');\n    if(!wallet.priAccount.length) {\n      l_t.e('please connect wallet first!');\n      return;\n    }\n    console.log('performing swap operation');\n    \n    log.i('TH Amount:', thresholdAmount);\n\n    RouterContract.swap_TT(\n      [\n        amountIn,\n        thresholdAmount,\n        pair,\n        wallet.priAccount,\n        getDeadline(swap.deadLine),\n      ],\n      isExactIn\n    );\n  }\n\n  function upsideDown(e) {\n    e.preventDefault();\n    let t = [swap.token1, swap.token2],\n        s = [swap.token1_sym, swap.token2_sym],\n        a = [swap.token1_addr, swap.token2_addr];\n\n    isExactIn ? \n    setOtherTokenValue(t[0], 2, [a[1], a[0]]) :\n    setOtherTokenValue(t[1], 1, [a[1], a[0]]);\n    \n    dispatch(setTokenInfo({sym: s[1], addr: a[1], n: 1}));\n    dispatch(setTokenInfo({sym: s[0], addr: a[0], n: 2}));\n      \n  }\n\n  async function setOtherTokenValue(v, n, p) {\n    resetStates();\n    setIsExactIn(!(n-1));\n    // set current token value to what is given\n    log.i('test:', /^[0-9]*[.]?[0-9]*$/gmi.test(v));\n    if(!/^[0-9]*[.,]?[0-9]*$/gmi.test(v)) {\n      return dispatch(setTokenValue('', n));\n    }\n    dispatch(setTokenValue({v, n}));\n    setIsFetching(!0);\n    // check if given value is non-zero\n    if(v.length && parseFloat(v) > 0) {\n      // if n is 1, exact is input (exactIn) => we need to get amount for out i.e. getAmountsOut()\n      // if n is 2, exact is output (exactOut) => we need to get amount for in i.e. getAmountsIn()\n      try {\n        p = p || [swap.token1_addr, swap.token2_addr];\n        let newPair = await checkIfHasPair(p), e1='', e2='';\n        TokenContract.init(p ? p[n-1] : swap[`token${n}_addr`]);\n        let dec = await TokenContract.decimals();\n        let typedAmount = v;\n        v = spow(v, dec);\n        let amounts = n-1 ? await RouterContract.getAmountsIn([v, newPair]) : await RouterContract.getAmountsOut([v, newPair]) ;\n        let inOrOutAmount = n-1 ? amounts[0] : amounts[amounts.length-1], \n            xch = toGib(\n              spow(\n                bigDiv(\n                  inOrOutAmount, \n                  BigNumber.from(v)\n                ), dec\n              ), dec\n            );\n            \n        let amt = inOrOutAmount.toString();\n        log.i('exactIn:', !(n-1), 'amount:', amt);\n        TokenContract.init(p ? p[n-1 ? 0 : 1] : swap[`token${n-1 ? 1 : 2}_addr`]);\n        dec = await TokenContract.decimals();\n        let _tmpAmt = BigNumber.from(n-1 ? amt : v);\n        TokenContract.init(swap.token1_addr);\n        // check balance for token 1\n        let bal = await TokenContract.balanceOf(wallet.priAccount);\n        let hasBal = bal.gt(_tmpAmt);\n        \n        // check allowance for token 1\n        let allowance = await TokenContract.allowance(wallet.priAccount, ADDRESS.ROUTER_CONTRACT);\n\n        let isApproved = allowance.gt(_tmpAmt);\n         \n        // let aa =  await TokenContract.approve( ADDRESS.ROUTER_CONTRACT,approveWithMaxAmount)\n      \n\n        if(!hasBal) {\n          setIsErr(!0);\n          setErrText('Insufficient balance for ' + swap.token1_sym);\n        } else if(!isApproved) {\n          setIsErr(!0);\n          setErrText('Approve ' + swap.token1_sym);\n        } else setIsErr(!1);\n\n        //fixed the exponential value v\n        if(v/10**18<0.000001)\n        {\n          \n          v=(amt/10**18).toFixed(20);\n        }\n        else{\n        v = toGib(amt, dec);\n        }\n\n        // v = toGib(amt, dec);\n        const xactIn = !!!(n-1);\n        log.i('xact in:', xactIn, v, typedAmount);\n        setTimeout(async _ => await setSwapPrerequisites(typedAmount, newPair, inOrOutAmount, xactIn, n, e2), 1000);\n        // set another token value\n        dispatch(setTokenValue({v, n:n-1?1:2}));\n        console.log(\"xxxxxxxxxxxxxxxx\",1/xch);\n        setXchangeEquivalent(xch);\n        setIsFetching(!1);\n        setTokenApproved(isApproved);\n      } catch(e) {\n        log.e(e);\n        try{e = e.toString().match(/\\\"(.*?)\\\"/)[1].split(':')[1].trim(); l_t.e(e);}catch(ee){};\n      }\n      return;\n    } else {\n      dispatch(setTokenValue({v, n:0}));\n    }\n    setIsFetching(!1);\n    setIsExactIn(!0);\n    dispatch(setTokenValue({v:'', n:n-1?1:2}));\n  }\n\n  function token(addr) {\n    return swap.tokenList.filter(t => t.addr === addr)[0];\n  }\n\n  async function searchOrImportToken(v) {\n    v = v.trim();\n    if(!v.length) v = swap.tokenList;\n    else if(isValidAddr(v) && !swap.tokenList.filter(tkn => tkn.addr === v).length) {\n      \n      TokenContract.init(v);\n      let name = await TokenContract.name();\n      let sym = await TokenContract.symbol();\n      let dec = await TokenContract.decimals();\n      // wallet must be connected for this!\n      let bal = await TokenContract.balanceOf(wallet.priAccount);\n      bal = bal.toBigInt().toString();\n      v = [{name, sym, dec, bal, addr: v, icon: GenIcon, imported: !1}]\n    } else {\n      v = swap.tokenList.filter(tkn => {\n        if(tkn.sym.toLowerCase().indexOf(v.toLowerCase()) >= 0) return !0;\n        if(tkn.addr === v) return !0;\n        return !1;\n      });\n    }\n    dispatch(changeTokenList(v));\n  }\n\n  function importToken() {\n    let token = swap.tokenList_chg[0];\n    dispatch(addToTokenList({...token, imported: !0}));\n    dispatch(changeTokenList([{...token, imported: !0}]));\n  }\n\n  function resetTList_chg() {\n    // dispatch(changeTokenList(swap.tokenList));\n    // pending..\n  }\n\n  // ------------------------------------------------------\n\n  // ------------------ other code ------------------------\n\n  async function claimCST(e) {\n    e.preventDefault();\n    let hasClaimed = await FaucetContract.hasClaimed(wallet.priAccount);\n    if(hasClaimed) {\n      l_t.e('already claimed!');\n      return;\n    }\n    await FaucetContract.claimCST();\n    l_t.s('claim success!. please check your account.');\n  }\n\n  // ------------------------------------------------------\n\n  return (\n    <>\n      <section className=\"swapheader_Sec\">\n        <Container>\n          <div className=\"swapCmn_cont\">\n            <div className=\"swapHeader_img\">\n              <img src={headerImg} />\n            </div>\n          </div>\n        </Container>\n      </section>\n      <Layout>\n        <section className=\"swapComn_Sec\">\n          <Container className=\"swapCmn_cont\">\n            {/* connect wallet section */}\n            <Row className=\"connectWallet_Row\">\n              <Col xl={6} md={6} sm={12}>\n                <div className=\"connectWallet_Left\">\n                  <img src={draco} alt=\"img\" />\n                </div>\n              </Col>\n              <Col xl={6} md={6} sm={12}>\n                <div className=\"connectWallet_Right\">\n                  <ButtonPrimary\n                    title={connectTitle}\n                    className=\"connectWallet\"\n                    onClick={handleShow}\n                  />\n                  <ConnectWalletModal\n                    show={show}\n                    onHide={handleClose}\n                    conTitleCbk={setConnectTitle}\n                  />\n                  <h1>Claim</h1>\n                  <ButtonPrimary title=\"1000 cts\" className=\"ctsBtn\" onClick={claimCST} />\n                  <p>(Crypto stars tokens)</p>\n                </div>\n              </Col>\n            </Row>\n            {/* swap coin section */}\n            <Row className=\"swapRow\">\n              <Col xl={12} md={12} sm={12}>\n                <div className=\"swapCard\">\n                  <div className=\"settingWrap\">\n                    <span className=\"me-3\" onClick={recentHndShow}>\n                      <img src={timer} alt=\"icon\" />\n                    </span>\n                    <span onClick={settingHndShow}>\n                      <img src={settings} alt=\"icon\" />\n                    </span>\n                    <RecentTransactions\n                      show={recentShow}\n                      onHide={recentHndClose}\n                    />\n                    <SettingModal\n                      show={settingsShow}\n                      onHide={settingHndClose}\n                      states={\n                        {\n                          dLine: {\n                            val: swap.deadLine,\n                            cbk: e => dispatch(setDeadLine(e.target.value))\n                          },\n                          slip: {\n                            val: swap.slippage,\n                            cbk: e => dispatch(setSlippage(e.target.value))\n                          },\n                        }\n                      }\n                    />\n                  </div>\n                  <Form>\n                    <CustomInputgroup \n                      icon={cstcoin} \n                      title=\"Swap From\"\n                      states={\n                        {\n                          token: {\n                            val: swap.token1, \n                            cbk: e => setOtherTokenValue(e.target.value, 1)\n                          },\n                          tList: {\n                            val: swap.token1_sym,\n                            importCbk: _ => importToken(),\n                            scbk: v => searchOrImportToken(v),\n                            resetTList_chg: _ => resetTList_chg(),\n                            cbk: (sym, addr) => dispatch(setTokenInfo({sym, addr, n: 1}))\n                          }\n                        }\n                      }\n                    />\n                    <button className=\"swapSwitch\" onClick={upsideDown}>\n                      <img src={swapicon} alt=\"swap_icon\" />\n                    </button>\n                    <CustomInputgroup\n                      icon={lamescoin}\n                      title=\"Swap To (est.)\"\n                      states={\n                        {\n                          token: {\n                            val: swap.token2, \n                            cbk: e => setOtherTokenValue(e.target.value, 2)\n                          },\n                          tList: {\n                            val: swap.token2_sym,\n                            importCbk: _ => importToken(),\n                            scbk: v => searchOrImportToken(v),\n                            resetTList_chg: _ => resetTList_chg(),\n                            cbk: (sym, addr) => dispatch(setTokenInfo({sym, addr, n: 2}))\n                          }\n                        }\n                      }\n                    />\n                    {\n                      !isFetching ?\n                      <div className='tokenXchangePriceWrap'>\n                        <div className='tokenXchangePrice'>\n                          <span>{swap.token2 && swap.token1 ? `1 ${token(swap.token2_addr)?.sym} = `:''}</span>\n                          <span>{swap.token1 && swap.token2 ? `${xchangeEquivalent} ${token(swap.token1_addr)?.sym}`:''}</span>\n                        </div>\n                      </div> : \n                      <div className='tokenXchangePriceWrap'>\n                        <Loader text='Fetching info...' stroke='white'/>\n                      </div>\n                    }\n                    <div className=\"slippageWrap\">\n                      <div className=\"slipageText\">\n                        <span>Slippage Tolerance</span>\n                        <span>{swap.slippage}%</span>\n                      </div>\n                    </div>\n                    {\n                     \n                      isErr && tokenApproved ?\n                      <div className='error-box'>\n                        <p>{errText}</p>\n                      </div> :\n                      (\n                        !tokenApproved ? \n                        <button\n                          className=\"approve-btn\" \n                          onClick={approveWithMaxAmount}\n                        >\n                          {'Approve ' + swap.token1_sym}\n                        </button> :\n\n                        <button\n                          disabled={isDisabled || isFetching}\n                          className=\"swap-btn\" \n                          onClick={!isErr ? performSwap : _=>_}\n                        >\n                          {isFetching ? 'please wait..' : 'Swap'}\n                        </button>\n                      )\n                    }\n                    \n                  </Form>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"soccerPlayer_Row\">\n              <h2 className=\"playerTitle\">Soccer Players</h2>\n              <Col xl={6} md={6} sm={12}>\n                <div className=\"soccerPlayer_left cmnBorder\">\n                  <PerfectScrollbar>\n                    <ul className=\"playerList\">\n                      <PlayerList />\n                    </ul>\n                  </PerfectScrollbar>\n                </div>\n              </Col>\n              <Col xl={6} md={6} sm={12}>\n                <div className=\"soccerPlayer_Right cmnBorder\">\n                  <PlayerCard />\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n      </Layout>\n    </>\n  );\n};\n\nexport default Swap;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Pages/Public/Home/Home.js",["215","216"],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Accordion } from \"react-bootstrap\";\nimport { FaqAccordianItem, Layout, ButtonPrimary } from \"../../../Common\";\nimport headerImg from \"../../../../Assets/Images/headerImg.png\";\nimport draco from \"../../../../Assets/Images/draco-header.png\";\nimport dracoroadmap from \"../../../../Assets/Images/draco-roadmap.png\";\nimport \"./Home.scss\";\n\nconst Home = () => {\n  const navigate = useNavigate();\n  return (\n    <Layout>\n      <section className=\"header_Sec\">\n        <Container className=\"commonCont\">\n          <div className=\"headerImg_wrap\">\n            <img src={headerImg} className=\"cryptoStars_img\" />\n            <img src={draco} className=\"dracoImg\" />\n          </div>\n        </Container>\n      </section>\n      <section className=\"pilotExp_Sec\">\n        <Container className=\"commonCont\">\n          <h2 className=\"cmnHeading\">PILOT EXPLAIN</h2>\n          <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting\n            industry. Lorem Ipsum has been the industry's standard dummy text\n            ever since the 1500s, when an unknown printer took a galley of type\n            and scrambled it to make a type specimen\n          </p>\n          <ButtonPrimary onClick={() => navigate(\"/swap\")} title=\"start now\" />\n        </Container>\n      </section>\n      <section className=\"fqs_Sec\">\n        <Container className=\"commonCont\">\n          <h2 className=\"cmnHeading\">FQS</h2>\n          <Accordion className=\"customAccordian\">\n            <FaqAccordianItem\n              eventKey={0}\n              no=\"1\"\n              title=\"¿Que es Crypto Stars y como funciona?\"\n              text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n                nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            />\n            <FaqAccordianItem\n              eventKey={1}\n              no=\"2\"\n              title=\"¿Que es Crypto Stars y como funciona?\"\n              text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n                nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            />\n            <FaqAccordianItem\n              eventKey={2}\n              no=\"3\"\n              title=\"¿Que es Crypto Stars y como funciona?\"\n              text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n                nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            />\n            <FaqAccordianItem\n              eventKey={3}\n              no=\"4\"\n              title=\"¿Que es Crypto Stars y como funciona?\"\n              text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n                nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            />\n            <FaqAccordianItem\n              eventKey={4}\n              no=\"5\"\n              title=\"¿Que es Crypto Stars y como funciona?\"\n              text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n                nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            />\n          </Accordion>\n        </Container>\n      </section>\n      <section className=\"roadmap_Sec\">\n        <Container className=\"commonCont\">\n          <h2 className=\"cmnHeading \">roadmap</h2>\n          <div className=\"roadmapWrap\">\n            <img\n              src={dracoroadmap}\n              alt=\"draco_img\"\n              className=\"dracoRoadmap_img\"\n            />\n            <Accordion defaultActiveKey=\"0\" className=\"roadmapAccordian\">\n              <div className=\"commnBg\">\n                <span>Q1</span> 2022\n              </div>\n              <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>\n                  <div>\n                    Integration\n                    <br /> with <span>oracles</span>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <ul>\n                    <li>Lorem ipsum sed</li>\n                    <li>dolor sit amet,</li>\n                    <li>consectetur adipiscing elit,</li>\n                  </ul>\n                </Accordion.Body>\n              </Accordion.Item>\n              <div className=\"commnBg\">\n                <span>Q2</span> 2022\n              </div>\n              <Accordion.Item eventKey=\"1\">\n                <Accordion.Header>\n                  <span>Pilot in testnet</span> <br /> with 3 major sports\n                  events:\n                </Accordion.Header>\n                <Accordion.Body>\n                  <ul>\n                    <li>\n                      May-Jun. <span>Tennis: French pen</span>\n                    </li>\n                    <li>\n                      May. <span>Soccer: UEFA Champions</span>\n                    </li>\n                    <li>\n                      Jun: <span>NBA Finals.</span>\n                    </li>\n                  </ul>\n                </Accordion.Body>\n              </Accordion.Item>\n              <div className=\"commnBg\">\n                <span>Q3</span> 2022\n              </div>\n              <Accordion.Item eventKey=\"2\">\n                <Accordion.Header>\n                  <span>\n                    Official Launch\n                    <br /> on mainnet\n                  </span>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <ul>\n                    <li>Lorem ipsum sed</li>\n                    <li>dolor sit amet,</li>\n                    <li>consectetur adipiscing elit,</li>\n                  </ul>\n                </Accordion.Body>\n              </Accordion.Item>\n              <div className=\"commnBg\">\n                <span>Q4</span> 2022\n              </div>\n              <Accordion.Item eventKey=\"3\">\n                <Accordion.Header>\n                  <span>Soccer World Cup </span> <br />\n                  Special Event and <br /> PR campaign\n                </Accordion.Header>\n                <Accordion.Body>\n                  <ul>\n                    <li>Lorem ipsum sed</li>\n                    <li>dolor sit amet,</li>\n                    <li>consectetur adipiscing elit,</li>\n                  </ul>\n                </Accordion.Body>\n              </Accordion.Item>\n              <Accordion.Item eventKey=\"4\">\n                <Accordion.Header>\n                  e-Sports <br /> <span>Athletes Tokens</span>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <ul>\n                    <li>Lorem ipsum sed</li>\n                    <li>dolor sit amet,</li>\n                    <li>consectetur adipiscing elit,</li>\n                  </ul>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n        </Container>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/factory.js",["217","218","219"],"import { ethers } from \"ethers\"\nimport { ABI } from \"../constants/abi\"\nimport { ADDRESS } from \"../constants/common\"\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\n\nimport CommonF from \"./common\";\n\nconst FactoryContract = {\n    get contract() {\n        Wallet.init();\n        return new ethers.Contract(\n            ADDRESS.FACTORY_CONTRACT, \n            ABI.FactoryContract,\n            Wallet.provider\n        );\n    },\n    get iface() {\n        return new ethers.utils.Interface(ABI.FactoryContract);\n    },\n    bytecode: function(meth, values) {\n        return this.iface.encodeFunctionData(meth, values);\n    },\n    getPair: function(addr1, addr2) {\n        return this.contract.getPair(addr1, addr2);\n    }\n}\n\nexport default FactoryContract;","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/faucet.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/router.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/token.js",["220","221"],"import { ethers } from \"ethers\"\nimport { ABI } from \"../constants/abi\"\nimport { ADDRESS } from \"../constants/common\"\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\nimport CommonF from \"./common\";\n\nconst TokenContract = {\n    _address: null,\n    get contract() {\n        Wallet.init();\n        return new ethers.Contract(\n            this._address, \n            ABI.Token,\n            Wallet.provider\n        );\n    },\n    get iface() {\n        return new ethers.utils.Interface(ABI.Token);\n    },\n    init: function(addr) {\n        this._address = addr;\n        return this;\n    },\n    bytecode: function(meth, values) {\n        return this.iface.encodeFunctionData(meth, values);\n    },\n    approve: function(amount, spender) {\n        let txObj = {\n            from: CommonF.from, to: this._address,\n            data: this.bytecode(METH.ERC20.APPROVE, [spender, amount])\n        }\n        return CommonF.sendTx(txObj);\n    },\n    name: function() {\n        return this.contract.name();\n    },\n    symbol: function() {\n        return this.contract.symbol();\n    },\n    decimals: function() {\n        return this.contract.decimals();\n    },\n    balanceOf: function(addr) {\n        return this.contract[METH.ERC20.BAL](addr);\n    },\n    allowance: function(owner, spender) {\n        return this.contract[METH.ERC20.ALLOWANCE](owner, spender);\n    }\n    \n}\n\nexport default TokenContract;","/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/utils.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Loader/index.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/contracts.js",[],"/home/user/Desktop/ashucryptyostart/crypto-star/src/services/constants/abi.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":19},{"ruleId":"226","severity":1,"message":"230","line":2,"column":35,"nodeType":"228","messageId":"229","endLine":2,"endColumn":39},{"ruleId":"231","severity":1,"message":"232","line":64,"column":11,"nodeType":"233","endLine":64,"endColumn":34},{"ruleId":"226","severity":1,"message":"234","line":2,"column":18,"nodeType":"228","messageId":"229","endLine":2,"endColumn":23},{"ruleId":"226","severity":1,"message":"235","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"226","severity":1,"message":"236","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":20},{"ruleId":"226","severity":1,"message":"235","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"226","severity":1,"message":"236","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":20},{"ruleId":"226","severity":1,"message":"237","line":3,"column":22,"nodeType":"228","messageId":"229","endLine":3,"endColumn":33},{"ruleId":"226","severity":1,"message":"238","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":11},{"ruleId":"226","severity":1,"message":"239","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":12},{"ruleId":"226","severity":1,"message":"240","line":2,"column":17,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":42,"column":24,"nodeType":"243","messageId":"244","endLine":42,"endColumn":26},{"ruleId":"226","severity":1,"message":"245","line":31,"column":3,"nodeType":"228","messageId":"229","endLine":31,"endColumn":13},{"ruleId":"226","severity":1,"message":"246","line":34,"column":3,"nodeType":"228","messageId":"229","endLine":34,"endColumn":15},{"ruleId":"226","severity":1,"message":"247","line":35,"column":3,"nodeType":"228","messageId":"229","endLine":35,"endColumn":15},{"ruleId":"226","severity":1,"message":"248","line":40,"column":3,"nodeType":"228","messageId":"229","endLine":40,"endColumn":20},{"ruleId":"226","severity":1,"message":"249","line":43,"column":3,"nodeType":"228","messageId":"229","endLine":43,"endColumn":18},{"ruleId":"226","severity":1,"message":"250","line":44,"column":3,"nodeType":"228","messageId":"229","endLine":44,"endColumn":18},{"ruleId":"226","severity":1,"message":"251","line":45,"column":3,"nodeType":"228","messageId":"229","endLine":45,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":116,"column":6,"nodeType":"254","endLine":116,"endColumn":20,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"256","line":120,"column":6,"nodeType":"254","endLine":120,"endColumn":21,"suggestions":"257"},{"ruleId":"252","severity":1,"message":"258","line":122,"column":3,"nodeType":"228","endLine":122,"endColumn":12,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"260","line":239,"column":48,"nodeType":"228","messageId":"229","endLine":239,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":303,"column":13,"nodeType":"228","messageId":"244","endLine":303,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":303,"column":37,"nodeType":"265","messageId":"266","endLine":303,"endColumn":38,"suggestions":"267"},{"ruleId":"263","severity":1,"message":"264","line":303,"column":44,"nodeType":"265","messageId":"266","endLine":303,"endColumn":45,"suggestions":"268"},{"ruleId":"231","severity":1,"message":"232","line":375,"column":15,"nodeType":"233","endLine":375,"endColumn":38},{"ruleId":"231","severity":1,"message":"232","line":17,"column":13,"nodeType":"233","endLine":17,"endColumn":64},{"ruleId":"231","severity":1,"message":"232","line":18,"column":13,"nodeType":"233","endLine":18,"endColumn":53},{"ruleId":"226","severity":1,"message":"269","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":14},{"ruleId":"226","severity":1,"message":"238","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":11},{"ruleId":"226","severity":1,"message":"270","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":15},{"ruleId":"226","severity":1,"message":"271","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":17},{"ruleId":"226","severity":1,"message":"238","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":11},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'EVENT' is defined but never used.","'evDispatch' is defined but never used.","'isValidAddr' is defined but never used.","'log' is defined but never used.","'WBNB' is defined but never used.","'MISC' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setExactIn' is defined but never used.","'setValidSwap' is defined but never used.","'setXchangeEq' is defined but never used.","'setToken1Approved' is defined but never used.","'setTokenValue_l' is defined but never used.","'setToken_addr_l' is defined but never used.","'setNeedOfAmountApp' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'wallet.isConnected' and 'wallet.priAccount'. Either include them or remove the dependency array.","ArrayExpression",["274"],"React Hook useEffect has a missing dependency: 'resetStates'. Either include it or remove the dependency array.",["275"],"React Hook useEffect contains a call to 'setIsDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pair, isErr] as a second argument to the useEffect Hook.",["276"],"'e1' is assigned a value but never used.","no-ex-assign","Do not assign to the exception parameter.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["277","278"],["279","280"],"'METH' is defined but never used.","'CommonF' is defined but never used.","'ADDRESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"messageId":"287","fix":"288","desc":"289"},{"messageId":"290","fix":"291","desc":"292"},{"messageId":"287","fix":"293","desc":"289"},{"messageId":"290","fix":"294","desc":"292"},"Update the dependencies array to be: [connectTitle, wallet.isConnected, wallet.priAccount]",{"range":"295","text":"296"},"Update the dependencies array to be: [resetStates, swap.slippage]",{"range":"297","text":"298"},"Add dependencies array: [pair, isErr]",{"range":"299","text":"300"},"removeEscape",{"range":"301","text":"302"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"303","text":"304"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"305","text":"302"},{"range":"306","text":"304"},[4365,4379],"[connectTitle, wallet.isConnected, wallet.priAccount]",[4425,4440],"[resetStates, swap.slippage]",[4544,4544],", [pair, isErr]",[10681,10682],"",[10681,10681],"\\",[10688,10689],[10688,10688]]