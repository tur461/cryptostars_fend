{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { ABI } from \"../constants/abi\";\nimport { ADDRESS } from \"../constants/common\";\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\nimport CommonF from \"./common\";\nconst RouterContract = {\n  get contract() {\n    Wallet.init();\n    return new ethers.Contract(ADDRESS.ROUTER_CONTRACT, ABI.RouterContract, Wallet.provider);\n  },\n\n  get iface() {\n    return new ethers.utils.Interface(ABI.RouterContract);\n  },\n\n  bytecode: function (meth, values) {\n    return this.iface.encodeFunctionData(meth, values);\n  },\n  getAmountsIn: function (params) {\n    return this.contract[METH.ROUTER_CONTRACT.AMOUNTS_IN](...params);\n  },\n  getAmountsOut: function (params) {\n    console.log(\"yyyyyyyyyyyyyyyyy\", params);\n    return this.contract[METH.ROUTER_CONTRACT.AMOUNTS_OUT](...params);\n  },\n  swapTokensForExactTokens: async function (params) {\n    let txObj = {\n      from: CommonF.from,\n      to: ADDRESS.ROUTER_CONTRACT,\n      data: this.bytecode(METH.ROUTER_CONTRACT.SWAP_TKN_XACT_TKN, [...params])\n    };\n    return CommonF.sendTx(txObj);\n  },\n  swapExactTokensForTokens: function (params) {\n    let txObj = {\n      from: CommonF.from,\n      to: ADDRESS.ROUTER_CONTRACT,\n      data: this.bytecode(METH.ROUTER_CONTRACT.SWAP_XACT_TKN_TKN, [...params])\n    };\n    return CommonF.sendTx(txObj);\n  },\n  swap_TT: function (params, isTokenAExact) {\n    log.i('swap_TT called with:', params, isTokenAExact);\n    return isTokenAExact ? this.swapExactTokensForTokens(params) : this.swapTokensForExactTokens(params);\n  },\n  addLiquidity: function (params) {\n    let txObj = {\n      from: CommonF.from,\n      to: ADDRESS.ROUTER_CONTRACT,\n      data: this.bytecode(METH.ROUTER_CONTRACT.ADD_LIQ, [...params])\n    };\n    return CommonF.sendTx(txObj);\n  }\n};\nexport default RouterContract;","map":{"version":3,"names":["ethers","ABI","ADDRESS","METH","log","Wallet","CommonF","RouterContract","contract","init","Contract","ROUTER_CONTRACT","provider","iface","utils","Interface","bytecode","meth","values","encodeFunctionData","getAmountsIn","params","AMOUNTS_IN","getAmountsOut","console","AMOUNTS_OUT","swapTokensForExactTokens","txObj","from","to","data","SWAP_TKN_XACT_TKN","sendTx","swapExactTokensForTokens","SWAP_XACT_TKN_TKN","swap_TT","isTokenAExact","i","addLiquidity","ADD_LIQ"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/router.js"],"sourcesContent":["import { ethers } from \"ethers\"\nimport { ABI } from \"../constants/abi\"\nimport { ADDRESS } from \"../constants/common\"\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\n\nimport CommonF from \"./common\";\n\nconst RouterContract = {\n    get contract() {\n        Wallet.init();\n        return new ethers.Contract(\n            ADDRESS.ROUTER_CONTRACT, \n            ABI.RouterContract,\n            Wallet.provider\n        );\n    },\n    get iface() {\n        return new ethers.utils.Interface(ABI.RouterContract);\n    },\n    bytecode: function(meth, values) {\n        return this.iface.encodeFunctionData(meth, values);\n    },\n    getAmountsIn: function(params) {\n        return this.contract[METH.ROUTER_CONTRACT.AMOUNTS_IN](...params);\n    },\n    getAmountsOut: function(params) {\n        console.log(\"yyyyyyyyyyyyyyyyy\",params);\n        return this.contract[METH.ROUTER_CONTRACT.AMOUNTS_OUT](...params);\n    },\n    swapTokensForExactTokens: async function(params) {\n        let txObj = {\n            from: CommonF.from, to: ADDRESS.ROUTER_CONTRACT,\n            data: this.bytecode(METH.ROUTER_CONTRACT.SWAP_TKN_XACT_TKN, [...params])\n        }\n        return CommonF.sendTx(txObj);\n    },\n    swapExactTokensForTokens: function(params) {\n        let txObj = {\n            from: CommonF.from, to: ADDRESS.ROUTER_CONTRACT,\n            data: this.bytecode(METH.ROUTER_CONTRACT.SWAP_XACT_TKN_TKN, [...params])\n        }\n        return CommonF.sendTx(txObj);\n    },\n    swap_TT: function(params, isTokenAExact) {\n        log.i('swap_TT called with:', params, isTokenAExact);\n        return isTokenAExact ? \n            this.swapExactTokensForTokens(params) :\n            this.swapTokensForExactTokens(params);\n    },\n    addLiquidity: function(params) {\n        let txObj = {\n            from: CommonF.from, to: ADDRESS.ROUTER_CONTRACT,\n            data: this.bytecode(METH.ROUTER_CONTRACT.ADD_LIQ, [...params])\n        }\n        return CommonF.sendTx(txObj);\n    }\n}\n\nexport default RouterContract;"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,cAAc,GAAG;EACnB,IAAIC,QAAJ,GAAe;IACXH,MAAM,CAACI,IAAP;IACA,OAAO,IAAIT,MAAM,CAACU,QAAX,CACHR,OAAO,CAACS,eADL,EAEHV,GAAG,CAACM,cAFD,EAGHF,MAAM,CAACO,QAHJ,CAAP;EAKH,CARkB;;EASnB,IAAIC,KAAJ,GAAY;IACR,OAAO,IAAIb,MAAM,CAACc,KAAP,CAAaC,SAAjB,CAA2Bd,GAAG,CAACM,cAA/B,CAAP;EACH,CAXkB;;EAYnBS,QAAQ,EAAE,UAASC,IAAT,EAAeC,MAAf,EAAuB;IAC7B,OAAO,KAAKL,KAAL,CAAWM,kBAAX,CAA8BF,IAA9B,EAAoCC,MAApC,CAAP;EACH,CAdkB;EAenBE,YAAY,EAAE,UAASC,MAAT,EAAiB;IAC3B,OAAO,KAAKb,QAAL,CAAcL,IAAI,CAACQ,eAAL,CAAqBW,UAAnC,EAA+C,GAAGD,MAAlD,CAAP;EACH,CAjBkB;EAkBnBE,aAAa,EAAE,UAASF,MAAT,EAAiB;IAC5BG,OAAO,CAACpB,GAAR,CAAY,mBAAZ,EAAgCiB,MAAhC;IACA,OAAO,KAAKb,QAAL,CAAcL,IAAI,CAACQ,eAAL,CAAqBc,WAAnC,EAAgD,GAAGJ,MAAnD,CAAP;EACH,CArBkB;EAsBnBK,wBAAwB,EAAE,gBAAeL,MAAf,EAAuB;IAC7C,IAAIM,KAAK,GAAG;MACRC,IAAI,EAAEtB,OAAO,CAACsB,IADN;MACYC,EAAE,EAAE3B,OAAO,CAACS,eADxB;MAERmB,IAAI,EAAE,KAAKd,QAAL,CAAcb,IAAI,CAACQ,eAAL,CAAqBoB,iBAAnC,EAAsD,CAAC,GAAGV,MAAJ,CAAtD;IAFE,CAAZ;IAIA,OAAOf,OAAO,CAAC0B,MAAR,CAAeL,KAAf,CAAP;EACH,CA5BkB;EA6BnBM,wBAAwB,EAAE,UAASZ,MAAT,EAAiB;IACvC,IAAIM,KAAK,GAAG;MACRC,IAAI,EAAEtB,OAAO,CAACsB,IADN;MACYC,EAAE,EAAE3B,OAAO,CAACS,eADxB;MAERmB,IAAI,EAAE,KAAKd,QAAL,CAAcb,IAAI,CAACQ,eAAL,CAAqBuB,iBAAnC,EAAsD,CAAC,GAAGb,MAAJ,CAAtD;IAFE,CAAZ;IAIA,OAAOf,OAAO,CAAC0B,MAAR,CAAeL,KAAf,CAAP;EACH,CAnCkB;EAoCnBQ,OAAO,EAAE,UAASd,MAAT,EAAiBe,aAAjB,EAAgC;IACrChC,GAAG,CAACiC,CAAJ,CAAM,sBAAN,EAA8BhB,MAA9B,EAAsCe,aAAtC;IACA,OAAOA,aAAa,GAChB,KAAKH,wBAAL,CAA8BZ,MAA9B,CADgB,GAEhB,KAAKK,wBAAL,CAA8BL,MAA9B,CAFJ;EAGH,CAzCkB;EA0CnBiB,YAAY,EAAE,UAASjB,MAAT,EAAiB;IAC3B,IAAIM,KAAK,GAAG;MACRC,IAAI,EAAEtB,OAAO,CAACsB,IADN;MACYC,EAAE,EAAE3B,OAAO,CAACS,eADxB;MAERmB,IAAI,EAAE,KAAKd,QAAL,CAAcb,IAAI,CAACQ,eAAL,CAAqB4B,OAAnC,EAA4C,CAAC,GAAGlB,MAAJ,CAA5C;IAFE,CAAZ;IAIA,OAAOf,OAAO,CAAC0B,MAAR,CAAeL,KAAf,CAAP;EACH;AAhDkB,CAAvB;AAmDA,eAAepB,cAAf"},"metadata":{},"sourceType":"module"}