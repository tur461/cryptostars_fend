{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { EVENT } from '../../../services/constants/common';\nimport { evDispatch, isValidAddr } from '../../../services/utils';\nexport const liquiditySlice = createSlice({\n  name: 'liquidity',\n  initialState: {\n    token1: '',\n    token1_addr: '',\n    token2: '',\n    token2_addr: '',\n    amount1AppNeeded: !1,\n    amount2AppNeeded: !1\n  },\n  reducers: {\n    setTokenValue_l: (state, action) => {\n      state[`token${action.payload.n}`] = action.payload.v;\n    },\n    setToken_addr_l: (state, action) => {\n      state[`token{action.payload.n}_addr`] = action.payload.addr;\n    },\n    setNeedOfAmountApp: (state, action) => {\n      state[`amount${action.payload.n}AppNeeded`] = action.payload.v;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = liquiditySlice;\nexport const {\n  setTokenValue_l,\n  setToken_addr_l,\n  setNeedOfAmountApp\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","EVENT","evDispatch","isValidAddr","liquiditySlice","name","initialState","token1","token1_addr","token2","token2_addr","amount1AppNeeded","amount2AppNeeded","reducers","setTokenValue_l","state","action","payload","n","v","setToken_addr_l","addr","setNeedOfAmountApp","reducer","actions"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/features/liquidity/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { EVENT } from '../../../services/constants/common';\nimport { evDispatch, isValidAddr } from '../../../services/utils';\n\n\nexport const liquiditySlice = createSlice({\n    name: 'liquidity',\n    initialState: {\n        token1: '',\n        token1_addr: '',\n        token2: '',\n        token2_addr: '',\n        amount1AppNeeded: !1,\n        amount2AppNeeded: !1,\n    },\n\n    reducers: {\n        setTokenValue_l: (state, action) => {\n            state[`token${action.payload.n}`] = action.payload.v;\n        },\n        setToken_addr_l: (state, action) => {\n            state[`token{action.payload.n}_addr`] = action.payload.addr;\n        },\n        setNeedOfAmountApp: (state, action) => {\n            state[`amount${action.payload.n}AppNeeded`] = action.payload.v;\n        },\n    }\n});\n\nconst {reducer, actions } = liquiditySlice;\n\nexport const { \n    setTokenValue_l,\n    setToken_addr_l,\n    setNeedOfAmountApp,\n} = actions;\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,oCAAtB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,yBAAxC;AAGA,OAAO,MAAMC,cAAc,GAAGJ,WAAW,CAAC;EACtCK,IAAI,EAAE,WADgC;EAEtCC,YAAY,EAAE;IACVC,MAAM,EAAE,EADE;IAEVC,WAAW,EAAE,EAFH;IAGVC,MAAM,EAAE,EAHE;IAIVC,WAAW,EAAE,EAJH;IAKVC,gBAAgB,EAAE,CAAC,CALT;IAMVC,gBAAgB,EAAE,CAAC;EANT,CAFwB;EAWtCC,QAAQ,EAAE;IACNC,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAChCD,KAAK,CAAE,QAAOC,MAAM,CAACC,OAAP,CAAeC,CAAE,EAA1B,CAAL,GAAoCF,MAAM,CAACC,OAAP,CAAeE,CAAnD;IACH,CAHK;IAINC,eAAe,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAChCD,KAAK,CAAE,8BAAF,CAAL,GAAwCC,MAAM,CAACC,OAAP,CAAeI,IAAvD;IACH,CANK;IAONC,kBAAkB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACnCD,KAAK,CAAE,SAAQC,MAAM,CAACC,OAAP,CAAeC,CAAE,WAA3B,CAAL,GAA8CF,MAAM,CAACC,OAAP,CAAeE,CAA7D;IACH;EATK;AAX4B,CAAD,CAAlC;AAwBP,MAAM;EAACI,OAAD;EAAUC;AAAV,IAAsBpB,cAA5B;AAEA,OAAO,MAAM;EACTU,eADS;EAETM,eAFS;EAGTE;AAHS,IAITE,OAJG;AAMP,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}