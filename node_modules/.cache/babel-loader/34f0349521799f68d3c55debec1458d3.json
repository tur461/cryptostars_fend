{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/ConnectWalletModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport CustomModal from \"./CustomModal\";\nimport { Toast } from \"../Toast/Toast\";\nimport { setPriAccount, walletConnected } from \"../../features/wallet\";\nimport Wallet from \"../../../services/wallet\";\nimport CommonF from \"../../../services/contracts/common\";\nimport l_t from \"../../../services/logging/l_t\";\nimport { EVENT, MISC } from \"../../../services/constants/common\";\nimport log from \"../../../services/logging/logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst trunc = a => `${a.slice(0, 5)}..${a.slice(39, 42)}`;\n\nconst ConnectWalletModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  function proc(acc) {\n    dispatch(walletConnected(acc.length ? !0 : !1));\n    dispatch(setPriAccount(acc));\n    CommonF.init({\n      from: acc\n    });\n    props.conTitleCbk(acc.length ? trunc(acc) : MISC.CONNECT_TTL);\n  }\n\n  window.addEventListener(EVENT.CHAIN_CHANGE, async e => {\n    log.s(EVENT.CHAIN_CHANGE);\n    if (!e.detail.isValidChain) proc('');\n  });\n\n  const walletConnectCall = async (walletType, type) => {\n    try {\n      Wallet.init();\n      let isValidChain = await Wallet.checkChain();\n\n      if (!isValidChain) {\n        props.onHide(false);\n        return;\n      }\n\n      let acc = await Wallet.getPriAccount();\n\n      if (acc) {\n        l_t.s('Wallet connected successfully!');\n        props.onHide(false);\n        proc(acc);\n      } else l_t.e('no account found!');\n    } catch (error) {\n      Toast.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    show: props.show,\n    onHide: props.onHide,\n    classname: \"ConctModl_Style\",\n    title: \"Connect To Wallet\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => walletConnectCall('Metamask', 'Metamask'),\n          children: \"Connect To Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Connect To TrustWallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectWalletModal, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ConnectWalletModal;\nexport default ConnectWalletModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWalletModal\");","map":{"version":3,"names":["React","useDispatch","CustomModal","Toast","setPriAccount","walletConnected","Wallet","CommonF","l_t","EVENT","MISC","log","trunc","a","slice","ConnectWalletModal","props","dispatch","proc","acc","length","init","from","conTitleCbk","CONNECT_TTL","window","addEventListener","CHAIN_CHANGE","e","s","detail","isValidChain","walletConnectCall","walletType","type","checkChain","onHide","getPriAccount","error","message","show"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/Components/Common/Modal/ConnectWalletModal.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport CustomModal from \"./CustomModal\";\nimport { Toast } from \"../Toast/Toast\";\nimport { setPriAccount, walletConnected } from \"../../features/wallet\";\n\nimport Wallet from \"../../../services/wallet\";\nimport CommonF from \"../../../services/contracts/common\";\nimport l_t from \"../../../services/logging/l_t\";\nimport { EVENT, MISC } from \"../../../services/constants/common\";\nimport log from \"../../../services/logging/logger\";\n\nconst trunc = a => `${a.slice(0, 5)}..${a.slice(39, 42)}`;\n\nconst ConnectWalletModal = (props) => {\n  const dispatch = useDispatch();\n  \n  function proc(acc) {\n    dispatch(walletConnected(acc.length ? !0 : !1));\n    dispatch(setPriAccount(acc));\n    CommonF.init({from: acc});\n    props.conTitleCbk(acc.length ? trunc(acc) : MISC.CONNECT_TTL);\n  }\n  \n  window.addEventListener(EVENT.CHAIN_CHANGE, async e => {\n    log.s(EVENT.CHAIN_CHANGE);\n    if(!e.detail.isValidChain) proc('');\n  });\n\n  const walletConnectCall = async (walletType, type) => {\n    try {\n      Wallet.init();\n      let isValidChain = await Wallet.checkChain();\n      if(!isValidChain) {\n        props.onHide(false);\n        return;\n      }\n      let acc = await Wallet.getPriAccount();\n\n      if (acc) {\n        l_t.s('Wallet connected successfully!');\n        props.onHide(false);\n        proc(acc);\n      } else l_t.e('no account found!');\n    } catch (error) {\n      Toast.error(error.message);\n    }\n  }\n  return (\n    <CustomModal\n      show={props.show}\n      onHide={props.onHide}\n      classname=\"ConctModl_Style\"\n      title=\"Connect To Wallet\"\n    >\n      <ul>\n        <li>\n          <button onClick={() => walletConnectCall('Metamask', 'Metamask')}>Connect To Metamask</button>\n        </li>\n        <li>\n          <button>Connect To TrustWallet</button>\n        </li>\n      </ul>\n    </CustomModal>\n  );\n};\n\nexport default ConnectWalletModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}