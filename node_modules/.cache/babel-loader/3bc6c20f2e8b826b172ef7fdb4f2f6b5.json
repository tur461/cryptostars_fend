{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { EVENT, MISC, VALID_CHAIN_ID } from \"../constants/common\";\nimport log from \"../logging/logger\";\nimport l_t from \"../logging/l_t\";\nimport { getAddress } from 'ethers/lib/utils';\nconst Wallet = {\n  M: window.ethereum,\n  _signer: null,\n  _provider: null,\n  init: async function () {\n    log.s('Wallet init..');\n\n    if (!!!this._provider) {\n      this._provider = new ethers.providers.Web3Provider(this.M, 'any');\n      this._signer = this.provider.getSigner();\n\n      this._initEvents();\n\n      log.s('init done');\n    }\n\n    return this;\n  },\n\n  get signer() {\n    log.i('get signer');\n    return this._signer;\n  },\n\n  get provider() {\n    log.i('get provider');\n    return this._provider;\n  },\n\n  checkChain: async function () {\n    let nw = await this._provider.getNetwork();\n\n    if (nw.chainId !== VALID_CHAIN_ID) {\n      l_t.e('please select cronos testnet');\n      return !1;\n    }\n\n    return !0;\n  },\n  getPriAccount: async function () {\n    let accounts = await this._provider.send('eth_requestAccounts', []);\n    accounts = accounts.map(a => getAddress(a));\n    return accounts[0];\n  },\n  _initEvents: function () {\n    window.ethereum.on('chainChanged', async _ => {\n      l_t.i('chain change event');\n      let isValidChain = await this.checkChain();\n      window.dispatchEvent(new CustomEvent(EVENT.CHAIN_CHANGE, {\n        detail: {\n          isValidChain\n        }\n      }));\n    });\n    window.ethereum.on('accountsChanged', _ => {\n      l_t.i('account change event');\n      window.dispatchEvent(new Event(EVENT.ACC_CHANGE));\n    });\n  }\n};\nexport default Wallet;","map":{"version":3,"names":["ethers","EVENT","MISC","VALID_CHAIN_ID","log","l_t","getAddress","Wallet","M","window","ethereum","_signer","_provider","init","s","providers","Web3Provider","provider","getSigner","_initEvents","signer","i","checkChain","nw","getNetwork","chainId","e","getPriAccount","accounts","send","map","a","on","_","isValidChain","dispatchEvent","CustomEvent","CHAIN_CHANGE","detail","Event","ACC_CHANGE"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/services/wallet/index.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { EVENT, MISC, VALID_CHAIN_ID } from \"../constants/common\";\nimport log from \"../logging/logger\";\nimport l_t from \"../logging/l_t\";\nimport { getAddress } from 'ethers/lib/utils';\n\nconst Wallet = {\n    M: window.ethereum,\n    _signer: null,\n    _provider: null,\n    init: async function() {\n        log.s('Wallet init..');\n        if(!!!this._provider) {\n            this._provider = new ethers.providers.Web3Provider(this.M, 'any');\n            this._signer = this.provider.getSigner();\n            this._initEvents();\n            log.s('init done');\n        }\n        return this;\n    },\n    get signer() {\n        log.i('get signer');\n        return this._signer;\n    },\n    get provider() {\n        log.i('get provider');\n        return this._provider;\n    },\n    checkChain: async function() {\n        let nw = await this._provider.getNetwork()\n        if(nw.chainId !== VALID_CHAIN_ID) {\n            l_t.e('please select cronos testnet');\n            return !1;\n        }\n        return !0;\n    },\n    getPriAccount: async function() {\n        let accounts = await this._provider.send('eth_requestAccounts', []);\n        accounts = accounts.map(a => getAddress(a));\n        return accounts[0];\n    },\n    _initEvents: function() {\n        window.ethereum.on('chainChanged', async _ => {\n            l_t.i('chain change event');\n            let isValidChain = await this.checkChain();\n            window.dispatchEvent(new CustomEvent(EVENT.CHAIN_CHANGE, {detail: {isValidChain}}));\n        });\n        window.ethereum.on('accountsChanged', _ => {\n            l_t.i('account change event');\n            window.dispatchEvent(new Event(EVENT.ACC_CHANGE));\n        });\n    }\n}\n\nexport default Wallet;"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,cAAtB,QAA4C,qBAA5C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,MAAM,GAAG;EACXC,CAAC,EAAEC,MAAM,CAACC,QADC;EAEXC,OAAO,EAAE,IAFE;EAGXC,SAAS,EAAE,IAHA;EAIXC,IAAI,EAAE,kBAAiB;IACnBT,GAAG,CAACU,CAAJ,CAAM,eAAN;;IACA,IAAG,CAAC,CAAC,CAAC,KAAKF,SAAX,EAAsB;MAClB,KAAKA,SAAL,GAAiB,IAAIZ,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkC,KAAKR,CAAvC,EAA0C,KAA1C,CAAjB;MACA,KAAKG,OAAL,GAAe,KAAKM,QAAL,CAAcC,SAAd,EAAf;;MACA,KAAKC,WAAL;;MACAf,GAAG,CAACU,CAAJ,CAAM,WAAN;IACH;;IACD,OAAO,IAAP;EACH,CAbU;;EAcX,IAAIM,MAAJ,GAAa;IACThB,GAAG,CAACiB,CAAJ,CAAM,YAAN;IACA,OAAO,KAAKV,OAAZ;EACH,CAjBU;;EAkBX,IAAIM,QAAJ,GAAe;IACXb,GAAG,CAACiB,CAAJ,CAAM,cAAN;IACA,OAAO,KAAKT,SAAZ;EACH,CArBU;;EAsBXU,UAAU,EAAE,kBAAiB;IACzB,IAAIC,EAAE,GAAG,MAAM,KAAKX,SAAL,CAAeY,UAAf,EAAf;;IACA,IAAGD,EAAE,CAACE,OAAH,KAAetB,cAAlB,EAAkC;MAC9BE,GAAG,CAACqB,CAAJ,CAAM,8BAAN;MACA,OAAO,CAAC,CAAR;IACH;;IACD,OAAO,CAAC,CAAR;EACH,CA7BU;EA8BXC,aAAa,EAAE,kBAAiB;IAC5B,IAAIC,QAAQ,GAAG,MAAM,KAAKhB,SAAL,CAAeiB,IAAf,CAAoB,qBAApB,EAA2C,EAA3C,CAArB;IACAD,QAAQ,GAAGA,QAAQ,CAACE,GAAT,CAAaC,CAAC,IAAIzB,UAAU,CAACyB,CAAD,CAA5B,CAAX;IACA,OAAOH,QAAQ,CAAC,CAAD,CAAf;EACH,CAlCU;EAmCXT,WAAW,EAAE,YAAW;IACpBV,MAAM,CAACC,QAAP,CAAgBsB,EAAhB,CAAmB,cAAnB,EAAmC,MAAMC,CAAN,IAAW;MAC1C5B,GAAG,CAACgB,CAAJ,CAAM,oBAAN;MACA,IAAIa,YAAY,GAAG,MAAM,KAAKZ,UAAL,EAAzB;MACAb,MAAM,CAAC0B,aAAP,CAAqB,IAAIC,WAAJ,CAAgBnC,KAAK,CAACoC,YAAtB,EAAoC;QAACC,MAAM,EAAE;UAACJ;QAAD;MAAT,CAApC,CAArB;IACH,CAJD;IAKAzB,MAAM,CAACC,QAAP,CAAgBsB,EAAhB,CAAmB,iBAAnB,EAAsCC,CAAC,IAAI;MACvC5B,GAAG,CAACgB,CAAJ,CAAM,sBAAN;MACAZ,MAAM,CAAC0B,aAAP,CAAqB,IAAII,KAAJ,CAAUtC,KAAK,CAACuC,UAAhB,CAArB;IACH,CAHD;EAIH;AA7CU,CAAf;AAgDA,eAAejC,MAAf"},"metadata":{},"sourceType":"module"}