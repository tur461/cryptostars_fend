{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { ABI } from \"../constants/abi\";\nimport { ADDRESS } from \"../constants/common\";\nimport Wallet from \"../wallet\";\nimport CommonF from \"./common\";\nconst FaucetContract = {\n  get contract() {\n    Wallet.init();\n    return new ethers.Contract(ADDRESS.CST_FAUCET_CONTRACT, ABI.CSTFaucetContract, Wallet.provider);\n  },\n\n  get iface() {\n    return new ethers.utils.Interface(ABI.CSTFaucetContract);\n  },\n\n  bytecode: function (meth, values) {\n    return this.iface.encodeFunctionData(meth, values);\n  },\n  hasClaimed: function (addr) {\n    return this.contract.hasClaimed(addr);\n  },\n  claimCST: function () {\n    let txObj = {\n      from: CommonF.from,\n      to: ADDRESS.CST_FAUCET_CONTRACT,\n      data: this.bytecode('claim', [])\n    };\n    return CommonF.sendTx(txObj);\n  }\n};\nexport default FaucetContract;","map":{"version":3,"names":["ethers","ABI","ADDRESS","Wallet","CommonF","FaucetContract","contract","init","Contract","CST_FAUCET_CONTRACT","CSTFaucetContract","provider","iface","utils","Interface","bytecode","meth","values","encodeFunctionData","hasClaimed","addr","claimCST","txObj","from","to","data","sendTx"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/faucet.js"],"sourcesContent":["import { ethers } from \"ethers\"\nimport { ABI } from \"../constants/abi\"\nimport { ADDRESS } from \"../constants/common\"\nimport Wallet from \"../wallet\";\n\nimport CommonF from \"./common\";\n\nconst FaucetContract = {\n    get contract() {\n        Wallet.init();\n        return new ethers.Contract(\n            ADDRESS.CST_FAUCET_CONTRACT, \n            ABI.CSTFaucetContract,\n            Wallet.provider\n        );\n    },\n    get iface() {\n        return new ethers.utils.Interface(ABI.CSTFaucetContract);\n    },\n    bytecode: function(meth, values) {\n        return this.iface.encodeFunctionData(meth, values);\n    },\n    hasClaimed: function(addr) {\n        return this.contract.hasClaimed(addr);\n    },\n    claimCST: function() {\n        let txObj = {\n            from: CommonF.from, to: ADDRESS.CST_FAUCET_CONTRACT,\n            data: this.bytecode('claim', [])\n        }\n        return CommonF.sendTx(txObj);\n    },\n}\n\nexport default FaucetContract;"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,cAAc,GAAG;EACnB,IAAIC,QAAJ,GAAe;IACXH,MAAM,CAACI,IAAP;IACA,OAAO,IAAIP,MAAM,CAACQ,QAAX,CACHN,OAAO,CAACO,mBADL,EAEHR,GAAG,CAACS,iBAFD,EAGHP,MAAM,CAACQ,QAHJ,CAAP;EAKH,CARkB;;EASnB,IAAIC,KAAJ,GAAY;IACR,OAAO,IAAIZ,MAAM,CAACa,KAAP,CAAaC,SAAjB,CAA2Bb,GAAG,CAACS,iBAA/B,CAAP;EACH,CAXkB;;EAYnBK,QAAQ,EAAE,UAASC,IAAT,EAAeC,MAAf,EAAuB;IAC7B,OAAO,KAAKL,KAAL,CAAWM,kBAAX,CAA8BF,IAA9B,EAAoCC,MAApC,CAAP;EACH,CAdkB;EAenBE,UAAU,EAAE,UAASC,IAAT,EAAe;IACvB,OAAO,KAAKd,QAAL,CAAca,UAAd,CAAyBC,IAAzB,CAAP;EACH,CAjBkB;EAkBnBC,QAAQ,EAAE,YAAW;IACjB,IAAIC,KAAK,GAAG;MACRC,IAAI,EAAEnB,OAAO,CAACmB,IADN;MACYC,EAAE,EAAEtB,OAAO,CAACO,mBADxB;MAERgB,IAAI,EAAE,KAAKV,QAAL,CAAc,OAAd,EAAuB,EAAvB;IAFE,CAAZ;IAIA,OAAOX,OAAO,CAACsB,MAAR,CAAeJ,KAAf,CAAP;EACH;AAxBkB,CAAvB;AA2BA,eAAejB,cAAf"},"metadata":{},"sourceType":"module"}