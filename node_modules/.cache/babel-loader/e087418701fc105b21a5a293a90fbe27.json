{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { ABI } from \"../constants/abi\";\nimport { ADDRESS } from \"../constants/common\";\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\nimport CommonF from \"./common\";\nconst TokenContract = {\n  _address: null,\n\n  get contract() {\n    Wallet.init();\n    return new ethers.Contract(this._address, ABI.Token, Wallet.provider);\n  },\n\n  get iface() {\n    return new ethers.utils.Interface(ABI.Token);\n  },\n\n  init: function (addr) {\n    this._address = addr;\n    return this;\n  },\n  bytecode: function (meth, values) {\n    return this.iface.encodeFunctionData(meth, values);\n  },\n  approve: function (amount, spender) {\n    let txObj = {\n      from: CommonF.from,\n      to: this._address,\n      data: this.bytecode(METH.ERC20.APPROVE, [spender, amount])\n    };\n    return CommonF.sendTx(txObj);\n  },\n  name: function () {\n    return this.contract.name();\n  },\n  symbol: function () {\n    return this.contract.symbol();\n  },\n  decimals: function () {\n    return this.contract.decimals();\n  },\n  balanceOf: function (addr) {\n    return this.contract[METH.ERC20.BAL](addr);\n  },\n  allowance: function (owner, spender) {\n    return this.contract[METH.ERC20.ALLOWANCE](owner, spender);\n  }\n};\nexport default TokenContract;","map":{"version":3,"names":["ethers","ABI","ADDRESS","METH","log","Wallet","CommonF","TokenContract","_address","contract","init","Contract","Token","provider","iface","utils","Interface","addr","bytecode","meth","values","encodeFunctionData","approve","amount","spender","txObj","from","to","data","ERC20","APPROVE","sendTx","name","symbol","decimals","balanceOf","BAL","allowance","owner","ALLOWANCE"],"sources":["/home/user/Desktop/ashucryptyostart/crypto-star/src/services/contracts/token.js"],"sourcesContent":["import { ethers } from \"ethers\"\nimport { ABI } from \"../constants/abi\"\nimport { ADDRESS } from \"../constants/common\"\nimport { METH } from \"../constants/contracts\";\nimport log from \"../logging/logger\";\nimport Wallet from \"../wallet\";\nimport CommonF from \"./common\";\n\nconst TokenContract = {\n    _address: null,\n    get contract() {\n        Wallet.init();\n        return new ethers.Contract(\n            this._address, \n            ABI.Token,\n            Wallet.provider\n        );\n    },\n    get iface() {\n        return new ethers.utils.Interface(ABI.Token);\n    },\n    init: function(addr) {\n        this._address = addr;\n        return this;\n    },\n    bytecode: function(meth, values) {\n        return this.iface.encodeFunctionData(meth, values);\n    },\n    approve: function(amount, spender) {\n        let txObj = {\n            from: CommonF.from, to: this._address,\n            data: this.bytecode(METH.ERC20.APPROVE, [spender, amount])\n        }\n        return CommonF.sendTx(txObj);\n    },\n    name: function() {\n        return this.contract.name();\n    },\n    symbol: function() {\n        return this.contract.symbol();\n    },\n    decimals: function() {\n        return this.contract.decimals();\n    },\n    balanceOf: function(addr) {\n        return this.contract[METH.ERC20.BAL](addr);\n    },\n    allowance: function(owner, spender) {\n        return this.contract[METH.ERC20.ALLOWANCE](owner, spender);\n    }\n    \n}\n\nexport default TokenContract;"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,aAAa,GAAG;EAClBC,QAAQ,EAAE,IADQ;;EAElB,IAAIC,QAAJ,GAAe;IACXJ,MAAM,CAACK,IAAP;IACA,OAAO,IAAIV,MAAM,CAACW,QAAX,CACH,KAAKH,QADF,EAEHP,GAAG,CAACW,KAFD,EAGHP,MAAM,CAACQ,QAHJ,CAAP;EAKH,CATiB;;EAUlB,IAAIC,KAAJ,GAAY;IACR,OAAO,IAAId,MAAM,CAACe,KAAP,CAAaC,SAAjB,CAA2Bf,GAAG,CAACW,KAA/B,CAAP;EACH,CAZiB;;EAalBF,IAAI,EAAE,UAASO,IAAT,EAAe;IACjB,KAAKT,QAAL,GAAgBS,IAAhB;IACA,OAAO,IAAP;EACH,CAhBiB;EAiBlBC,QAAQ,EAAE,UAASC,IAAT,EAAeC,MAAf,EAAuB;IAC7B,OAAO,KAAKN,KAAL,CAAWO,kBAAX,CAA8BF,IAA9B,EAAoCC,MAApC,CAAP;EACH,CAnBiB;EAoBlBE,OAAO,EAAE,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;IAC/B,IAAIC,KAAK,GAAG;MACRC,IAAI,EAAEpB,OAAO,CAACoB,IADN;MACYC,EAAE,EAAE,KAAKnB,QADrB;MAERoB,IAAI,EAAE,KAAKV,QAAL,CAAcf,IAAI,CAAC0B,KAAL,CAAWC,OAAzB,EAAkC,CAACN,OAAD,EAAUD,MAAV,CAAlC;IAFE,CAAZ;IAIA,OAAOjB,OAAO,CAACyB,MAAR,CAAeN,KAAf,CAAP;EACH,CA1BiB;EA2BlBO,IAAI,EAAE,YAAW;IACb,OAAO,KAAKvB,QAAL,CAAcuB,IAAd,EAAP;EACH,CA7BiB;EA8BlBC,MAAM,EAAE,YAAW;IACf,OAAO,KAAKxB,QAAL,CAAcwB,MAAd,EAAP;EACH,CAhCiB;EAiClBC,QAAQ,EAAE,YAAW;IACjB,OAAO,KAAKzB,QAAL,CAAcyB,QAAd,EAAP;EACH,CAnCiB;EAoClBC,SAAS,EAAE,UAASlB,IAAT,EAAe;IACtB,OAAO,KAAKR,QAAL,CAAcN,IAAI,CAAC0B,KAAL,CAAWO,GAAzB,EAA8BnB,IAA9B,CAAP;EACH,CAtCiB;EAuClBoB,SAAS,EAAE,UAASC,KAAT,EAAgBd,OAAhB,EAAyB;IAChC,OAAO,KAAKf,QAAL,CAAcN,IAAI,CAAC0B,KAAL,CAAWU,SAAzB,EAAoCD,KAApC,EAA2Cd,OAA3C,CAAP;EACH;AAzCiB,CAAtB;AA6CA,eAAejB,aAAf"},"metadata":{},"sourceType":"module"}